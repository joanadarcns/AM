"0","rm(list=ls())"
"0","# Carregando os pacotes"
"0","library(tidymodels)"
"0","library(ggplot2)"
"0","library(tibble)"
"0","library(rsample)"
"0","library(patchwork)"
"0","library(tidyverse)"
"0","library(corrr)"
"0",""
"0","tidymodels::tidymodels_prefer()"
"0",""
"0","# Carregando a base de dados"
"0","dados <- read.csv(""~/JOANA/ESTATÍSTICA/2024.1/Aprendizagem de Máquina/AM/Prova1/dados/Ice_cream.csv"", sep = "","","
"0","                  col.names = c(""temperatura"",""vendas""))"
"0",""
"0","# Renomeando as variáveis"
"0","dados <- dados %>% dplyr::rename(x = temperatura, y = vendas)"
"0",""
"0","# Fixando a semente"
"0","set.seed(0)"
"0",""
"0","# Realizadon hold-out"
"0","dados_split <- rsample::initial_split(dados, prop = 0.8, strata = ""y"")"
"0","treino <- rsample::training(dados_split)"
"0","teste <- rsample::testing(dados_split)"
"0",""
"0","# Fazendo validação cruzada"
"0","cv <- vfold_cv(treino, v = 5)"
"0",""
"0","# Definindo o modelo"
"0","modelo <-"
"0","  parsnip::linear_reg() %>%"
"0","  parsnip::set_engine(""lm"") %>%"
"0","  parsnip::set_mode(""regression"")"
"0",""
"0",""
"0","# Definindo receita"
"0","receita <-"
"0","  recipe(y ~ ., data = treino) %>%"
"0","  recipes::step_poly("
"0","      all_numeric_predictors(),"
"0","      degree = tune(""p""),"
"0","      options = list(raw = TRUE)"
"0","    )"
"0",""
"0","# Validacação cruzada"
"0","cv <- vfold_cv(treino, v = 5)"
"0",""
"0","# Criando o workflow"
"0","wf <-"
"0","  workflow() %>%"
"0","  add_recipe(receita) %>%"
"0","  add_model(modelo)"
"0",""
"0","# Extraindo hiperparametros do modelo"
"0","parametros <-"
"0","  wf %>%"
"0","  extract_parameter_set_dials() %>% # Extraindo os hiperparâmetros do modelo"
"0","  extract_parameter_dials(""p"") %>%"
"0","  range_set(range = c(1, 5)) %>%"
"0","  parameters()"
"0",""
"0","parametros$id <- ""p"""
"0",""
"0","# Tunando o modelo"
"0","tunagem <- tune_grid("
"0","  wf,"
"0","  resamples = cv,"
"0","  grid = tibble(p = 1:5), # Parâmetros que desejamos que ele teste"
"0","  metrics = metric_set(rmse)"
"0",")"
"0",""
"0","# Coletando as métricas e o melhor grau"
"0","collect_metrics(tunagem)"
